// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_cb3d3668_bcf8_4ed6_b786_d4bfab542896 : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			return update.value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_2123fbd0_5434_4d95_abe7_36d4b8f3c48c : RotationBinding
	{
		public override string CoherenceComponentName => "WorldOrientation";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Quaternion Value
		{
			get => (Quaternion)(UnityEngine.Quaternion)(coherenceSync.coherenceRotation);
			set => coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value);
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldOrientation)coherenceComponent;
			return update.value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldOrientation)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldOrientation();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_2a34d42f_a321_4329_a1aa_7a636cca5994 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.score);
			set => CastedUnityComponent.score = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.score;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.score = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_90a7522a_fe83_4c1c_84d7_c2f596dd1070 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000000010;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.currentHeat);
			set => CastedUnityComponent.currentHeat = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.currentHeat;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.currentHeat = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_030c410a_d9ce_4f62_9f6c_30f9b35694fc : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000000100;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.speed);
			set => CastedUnityComponent.speed = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.speed;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.speed = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_ed85b47d_be0f_4d09_b821_7993fad650f3 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000001000;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.dragConstant);
			set => CastedUnityComponent.dragConstant = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.dragConstant;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.dragConstant = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_c5f4d9f1_be21_4dbf_a58e_fab34d665b51 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000010000;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.rotationSpeed);
			set => CastedUnityComponent.rotationSpeed = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.rotationSpeed;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.rotationSpeed = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_dd51e32b_1ef8_4386_9a9a_eea594c8f9b6 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000000100000;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.currentRotation);
			set => CastedUnityComponent.currentRotation = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.currentRotation;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.currentRotation = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_3e944974_7a5e_4dc1_b4c7_cc929caf0479 : FloatBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000001000000;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.decayRate);
			set => CastedUnityComponent.decayRate = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.decayRate;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.decayRate = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_8d0f824f_39fd_4a55_a77d_603e6b73e59e : ReferenceBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000010000000;

		public override SerializeEntityID Value
		{
			get => (SerializeEntityID)coherenceSync.MonoBridge.UnityObjectToEntityId(CastedUnityComponent.heatBar);
			set => CastedUnityComponent.heatBar = coherenceSync.MonoBridge.EntityIdToGameObject(value);
		}

		protected override SerializeEntityID ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.heatBar;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.heatBar = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_ec56e5c0_b17a_492d_bdc7_e3671d3a6b70 : StringBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000000100000000;

		public override string Value
		{
			get => (string)(System.String)(CastedUnityComponent.currentName);
			set => CastedUnityComponent.currentName = (System.String)(value);
		}

		protected override string ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.currentName;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.currentName = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_4aa26f8c_4dcb_488d_bb09_8b384325eb82 : BoolBinding
	{
		private PlayerScript CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (PlayerScript)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_PlayerScript_6943692034615545658";

		public override uint FieldMask => 0b00000000000000000000001000000000;

		public override bool Value
		{
			get => (bool)(System.Boolean)(CastedUnityComponent.enabled);
			set => CastedUnityComponent.enabled = (System.Boolean)(value);
		}

		protected override bool ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			return update.enabled;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_PlayerScript_6943692034615545658)coherenceComponent;
			update.enabled = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_PlayerScript_6943692034615545658();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_06f05b60_8a05_407a_b5bf_bd53eda51408 : StringBinding
	{
		private TMPro.TextMeshPro CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (TMPro.TextMeshPro)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override string Value
		{
			get => (string)(System.String)(CastedUnityComponent.text);
			set => CastedUnityComponent.text = (System.String)(value);
		}

		protected override string ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637)coherenceComponent;
			return update.text;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637)coherenceComponent;
			update.text = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_210a7214_5506_4986_bf42_cba07389c73b : Vector2Binding
	{
		private UnityEngine.Rigidbody2D CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (UnityEngine.Rigidbody2D)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector2 Value
		{
			get => (Vector2)(UnityEngine.Vector2)(CastedUnityComponent.velocity);
			set => CastedUnityComponent.velocity = (UnityEngine.Vector2)(value);
		}

		protected override Vector2 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189)coherenceComponent;
			return update.velocity;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189)coherenceComponent;
			update.velocity = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_911f1a0f_9151_49b9_a648_b95e3177be63 : FloatBinding
	{
		private UnityEngine.Rigidbody2D CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (UnityEngine.Rigidbody2D)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189";

		public override uint FieldMask => 0b00000000000000000000000000000010;

		public override float Value
		{
			get => (float)(System.Single)(CastedUnityComponent.gravityScale);
			set => CastedUnityComponent.gravityScale = (System.Single)(value);
		}

		protected override float ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189)coherenceComponent;
			return update.gravityScale;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189)coherenceComponent;
			update.gravityScale = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189();
		}
	}

	public class Binding_a26d02a2f63fd174f8b2dce76dc412a9_b3e7df05_2474_4f41_9985_f1a6df58df0e : DeepScaleBinding
	{
		private UnityEngine.Transform CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (UnityEngine.Transform)UnityComponent;
		}
		public override string CoherenceComponentName => "Player_id0_UnityEngine__char_46_Transform_7700443003500183079";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(CastedUnityComponent.localScale);
			set => CastedUnityComponent.localScale = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Transform_7700443003500183079)coherenceComponent;
			return update.localScale;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Player_id0_UnityEngine__char_46_Transform_7700443003500183079)coherenceComponent;
			update.localScale = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Player_id0_UnityEngine__char_46_Transform_7700443003500183079();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'Player' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncPlayer_id0 : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands
		private InputBuffer<Player> inputBuffer;
		private Player currentInput;
		private long lastAddedFrame = -1;
		private CoherenceInput coherenceInput;
		private long currentSimulationFrame => coherenceInput.CurrentSimulationFrame;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncPlayer_id0>();
			coherenceInput = coherenceSync.Input;
			inputBuffer = new InputBuffer<Player>(coherenceInput.InitialBufferSize, coherenceInput.InitialBufferDelay, coherenceInput.UseFixedSimulationFrames);
			if (coherenceSync.TryGetBindingByGuid("cb3d3668-bcf8-4ed6-b786-d4bfab542896", "position", out Binding InternalWorldPosition_Translation_value))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_cb3d3668_bcf8_4ed6_b786_d4bfab542896();
				InternalWorldPosition_Translation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldPosition_Translation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).position");
			}
			if (coherenceSync.TryGetBindingByGuid("2123fbd0-5434-4d95-abe7-36d4b8f3c48c", "rotation", out Binding InternalWorldOrientation_Rotation_value))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_2123fbd0_5434_4d95_abe7_36d4b8f3c48c();
				InternalWorldOrientation_Rotation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldOrientation_Rotation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).rotation");
			}
			if (coherenceSync.TryGetBindingByGuid("2a34d42f-a321-4329-a1aa-7a636cca5994", "score", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_score))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_2a34d42f_a321_4329_a1aa_7a636cca5994();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_score.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_score)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).score");
			}
			if (coherenceSync.TryGetBindingByGuid("90a7522a-fe83-4c1c-84d7-c2f596dd1070", "currentHeat", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentHeat))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_90a7522a_fe83_4c1c_84d7_c2f596dd1070();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentHeat.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentHeat)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).currentHeat");
			}
			if (coherenceSync.TryGetBindingByGuid("030c410a-d9ce-4f62-9f6c-30f9b35694fc", "speed", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_speed))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_030c410a_d9ce_4f62_9f6c_30f9b35694fc();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_speed.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_speed)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).speed");
			}
			if (coherenceSync.TryGetBindingByGuid("ed85b47d-be0f-4d09-b821-7993fad650f3", "dragConstant", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_dragConstant))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_ed85b47d_be0f_4d09_b821_7993fad650f3();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_dragConstant.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_dragConstant)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).dragConstant");
			}
			if (coherenceSync.TryGetBindingByGuid("c5f4d9f1-be21-4dbf-a58e-fab34d665b51", "rotationSpeed", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_rotationSpeed))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_c5f4d9f1_be21_4dbf_a58e_fab34d665b51();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_rotationSpeed.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_rotationSpeed)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).rotationSpeed");
			}
			if (coherenceSync.TryGetBindingByGuid("dd51e32b-1ef8-4386-9a9a-eea594c8f9b6", "currentRotation", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentRotation))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_dd51e32b_1ef8_4386_9a9a_eea594c8f9b6();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentRotation.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentRotation)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).currentRotation");
			}
			if (coherenceSync.TryGetBindingByGuid("3e944974-7a5e-4dc1-b4c7-cc929caf0479", "decayRate", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_decayRate))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_3e944974_7a5e_4dc1_b4c7_cc929caf0479();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_decayRate.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_decayRate)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).decayRate");
			}
			if (coherenceSync.TryGetBindingByGuid("8d0f824f-39fd-4a55-a77d-603e6b73e59e", "heatBar", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_heatBar))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_8d0f824f_39fd_4a55_a77d_603e6b73e59e();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_heatBar.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_heatBar)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).heatBar");
			}
			if (coherenceSync.TryGetBindingByGuid("ec56e5c0-b17a-492d-bdc7-e3671d3a6b70", "currentName", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentName))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_ec56e5c0_b17a_492d_bdc7_e3671d3a6b70();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentName.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_currentName)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).currentName");
			}
			if (coherenceSync.TryGetBindingByGuid("4aa26f8c-4dcb-488d-bb09-8b384325eb82", "enabled", out Binding InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_enabled))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_4aa26f8c_4dcb_488d_bb09_8b384325eb82();
				InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_enabled.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_PlayerScript_6943692034615545658_Player_id0_PlayerScript_6943692034615545658_enabled)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (PlayerScript).enabled");
			}
			if (coherenceSync.TryGetBindingByGuid("06f05b60-8a05-407a-b5bf-bd53eda51408", "text", out Binding InternalPlayer_id0_TMPro__char_46_TextMeshPro_8736711127938106637_Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637_text))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_06f05b60_8a05_407a_b5bf_bd53eda51408();
				InternalPlayer_id0_TMPro__char_46_TextMeshPro_8736711127938106637_Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637_text.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_TMPro__char_46_TextMeshPro_8736711127938106637_Player_id0_TMPro__char_46_TextMeshPro_8736711127938106637_text)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (TMPro.TextMeshPro).text");
			}
			if (coherenceSync.TryGetBindingByGuid("210a7214-5506-4986-bf42-cba07389c73b", "velocity", out Binding InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_velocity))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_210a7214_5506_4986_bf42_cba07389c73b();
				InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_velocity.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_velocity)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Rigidbody2D).velocity");
			}
			if (coherenceSync.TryGetBindingByGuid("911f1a0f-9151-49b9-a648-b95e3177be63", "gravityScale", out Binding InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_gravityScale))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_911f1a0f_9151_49b9_a648_b95e3177be63();
				InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_gravityScale.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_Player_id0_UnityEngine__char_46_Rigidbody2D_9221523111977080189_gravityScale)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Rigidbody2D).gravityScale");
			}
			if (coherenceSync.TryGetBindingByGuid("b3e7df05-2474-4f41-9985-f1a6df58df0e", "localScale", out Binding InternalPlayer_id0_UnityEngine__char_46_Transform_7700443003500183079_Player_id0_UnityEngine__char_46_Transform_7700443003500183079_localScale))
			{
				var clone = new Binding_a26d02a2f63fd174f8b2dce76dc412a9_b3e7df05_2474_4f41_9985_f1a6df58df0e();
				InternalPlayer_id0_UnityEngine__char_46_Transform_7700443003500183079_Player_id0_UnityEngine__char_46_Transform_7700443003500183079_localScale.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalPlayer_id0_UnityEngine__char_46_Transform_7700443003500183079_Player_id0_UnityEngine__char_46_Transform_7700443003500183079_localScale)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).localScale");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}
		private void OnDestroy()
		{
			if (monoBridge != null)
			{
				monoBridge.OnLateFixedNetworkUpdate -= SendInputState;
			}
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
			sync.Input.internalSetButtonState = SetButtonState;
			sync.Input.internalSetButtonRangeState = SetButtonRangeState;
			sync.Input.internalSetAxisState = SetAxisState;
			sync.Input.internalSetStringState = SetStringState;
			sync.Input.internalGetButtonState = GetButtonState;
			sync.Input.internalGetButtonRangeState = GetButtonRangeState;
			sync.Input.internalGetAxisState = GetAxisState;
			sync.Input.internalGetStringState = GetStringState;
			sync.Input.internalRequestBuffer = () => inputBuffer;
			sync.Input.internalOnInputReceived += OnInput;
			sync.Input.internalRequestBuffer = () => inputBuffer;

			if (coherenceInput.UseFixedSimulationFrames)
			{
				sync.MonoBridge.OnLateFixedNetworkUpdate += SendInputState;
			}
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				default:
					logger.Warning($"[CoherenceSyncPlayer_id0] Unhandled command: {command.GetType()}.");
					break;
			}
		}

		private void SetButtonState(string name, bool value)
		{
			switch(name)
			{
				default:
					logger.Error($"No input button of name: {name}");
					break;
			}
		}

		private void SetButtonRangeState(string name, float value)
		{
			switch(name)
			{
			default:
				logger.Error($"No input button range of name: {name}");
				break;
			}
		}

		private void SetAxisState(string name, Vector2 value)
		{
			switch(name)
			{
			default:
				logger.Error($"No input axis of name: {name}");
				break;
			}
		}

		private void SetStringState(string name, string value)
		{
			switch(name)
			{
				default:
					logger.Error($"No input button of name: {name}");
					break;
			}
		}

		public override void SendInputState()
		{
			if (!coherenceInput.IsProducer || !coherenceInput.IsReadyToProcessInputs || !coherenceInput.IsInputOwner)
			{
				return;
			}

			if (lastAddedFrame != currentSimulationFrame)
			{
				inputBuffer.AddInput(currentInput, currentSimulationFrame);
				lastAddedFrame = currentSimulationFrame;
			}

			while (inputBuffer.DequeueForSending(currentSimulationFrame, out long frameToSend, out Player input, out bool differs))
			{
				coherenceInput.DebugOnInputSent(frameToSend, input);
				client.SendInput(input, frameToSend, coherenceSync.EntityID);
			}
		}

		private bool ShouldPollCurrentInput(long frame)
		{
			return coherenceInput.IsProducer && coherenceInput.Delay == 0 && frame == currentSimulationFrame;
		}

		private bool GetButtonState(string name, long? simulationFrame)
		{
			long frame = simulationFrame.GetValueOrDefault(currentSimulationFrame);

			switch(name)
			{
				default:
					logger.Error($"No input button of name: {name}");
					break;
			}

			return false;
		}

		private float GetButtonRangeState(string name, long? simulationFrame)
		{
			long frame = simulationFrame.GetValueOrDefault(currentSimulationFrame);

			switch(name)
			{
			default:
				logger.Error($"No input button range of name: {name}");
				break;
			}

			return 0f;
		}

		private Vector2 GetAxisState(string name, long? simulationFrame)
		{
			long frame = simulationFrame.GetValueOrDefault(currentSimulationFrame);

			switch(name)
			{
			default:
				logger.Error($"No input axis of name: {name}");
				break;
			}

			return Vector2.zero;
		}

		private string GetStringState(string name, long? simulationFrame)
		{
			long frame = simulationFrame.GetValueOrDefault(currentSimulationFrame);

			switch(name)
			{
				default:
					logger.Error($"No input button of name: {name}");
					break;
			}

			return null;
		}

		private void OnInput(IEntityInput entityInput, long frame)
		{
			var input = (Player)entityInput;
			coherenceInput.DebugOnInputReceived(frame, entityInput);
			inputBuffer.ReceiveInput(input, frame);
		}
	}
}
