// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_1155d03ea10e86c4b8d8196ccbc3f483_e1fa1abd_5e37_468b_b82f_e497e58df332 : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			return update.value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'ScoreBoard' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncScoreBoard : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands		
		private ScoreBoardScript ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0_CommandTarget;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncScoreBoard>();
			if (coherenceSync.TryGetBindingByGuid("bd5d9a95-c3e9-4c8d-9736-02bde17cffd0", "reBuildList", out Binding ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0))
			{
				ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0_CommandTarget = (ScoreBoardScript)ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("ScoreBoardScript.reBuildList", "()",
				SendCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0, ReceiveLocalCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0, MessageTarget.All, ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (reBuildList)");
			}
			if (coherenceSync.TryGetBindingByGuid("e1fa1abd-5e37-468b-b82f-e497e58df332", "position", out Binding InternalWorldPosition_Translation_value))
			{
				var clone = new Binding_1155d03ea10e86c4b8d8196ccbc3f483_e1fa1abd_5e37_468b_b82f_e497e58df332();
				InternalWorldPosition_Translation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldPosition_Translation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.RectTransform).position");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}
		void SendCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0(MessageTarget target, object[] args)
		{
			var command = new ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0(MessageTarget target, object[] args)
		{
			var command = new ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0();
			ReceiveCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0(command);
		}

		void ReceiveCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0(ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0 command)
		{
			var target = ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0_CommandTarget;
			target.reBuildList();
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0 castedCommand:
					ReceiveCommand_ScoreBoard_ScoreBoardScript__char_46_reBuildList_bd5d9a95_c3e9_4c8d_9736_02bde17cffd0(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncScoreBoard] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
